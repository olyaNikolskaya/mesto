(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r){var o=e.likes,i=e._id,a=e.name,s=e.link,u=e.owner,c=n.cardPhotoSelector,l=n.cardTitleSelector,f=n.cardLikeSelector,h=n.cardLikesCounterSelector,d=n.cardRemoveButtonSelector,p=n.cardTemplate,_=n.activeLikeClass,v=r.handleCardClick,y=r.handleRemoveClick,m=r.handleSetLike,b=r.handleRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._likesList=o,this._cardId=i,this._name=a,this._link=s,this._ownerId=u._id,this._cardItem=p.content.cloneNode(!0).querySelector(".cards__item"),this._likesNumber=this._likesList.length,this._cardPhoto=this._cardItem.querySelector(c),this._cardTitle=this._cardItem.querySelector(l),this._cardRemoveButton=this._cardItem.querySelector(d),this._cardLike=this._cardItem.querySelector(f),this._cardLikesConter=this._cardItem.querySelector(h),this._handleCardClick=v,this._handleRemoveClick=y,this._handleSetLike=m,this._handleRemoveLike=b,this._activeLikeClass=_}var n,r;return n=t,(r=[{key:"getCardInfo",value:function(){var e={};return e.likes=this._likesList,e.id=this._cardId,e.name=this._name,e.link=this._link,e.ownerId=this._ownerId,e}},{key:"setLikesNumber",value:function(e){this._likesNumber=e}},{key:"removeCard",value:function(){this._cardItem.remove()}},{key:"renderCard",value:function(e){return this._cardPhoto.src=this._link,this._cardPhoto.alt=this._name,this._cardTitle.textContent=this._name,this._cardLikesConter.textContent=this._likesNumber,this._countLikesByUser(e)>0&&this._toggleLike(),this._ownerId!==e&&this._cardRemoveButton.classList.add("cards__remove-button_hidden"),this._setEventListeners(),this._cardItem}},{key:"_countLikesByUser",value:function(e){return this._likesList.filter((function(t){return t._id===e})).length}},{key:"_setEventListeners",value:function(){var e=this;this._cardRemoveButton.addEventListener("click",(function(){return e._handleRemoveClick()})),this._cardLike.addEventListener("click",(function(){return e._likeCard()})),this._cardPhoto.addEventListener("click",(function(){return e._handleCardClick()}))}},{key:"_likeCard",value:function(){this._cardLike.classList.contains(this._activeLikeClass)?(this._cardLikesConter.textContent=this._likesNumber-1,this._handleRemoveLike()):(this._cardLikesConter.textContent=this._likesNumber+1,this._handleSetLike()),this._toggleLike()}},{key:"_toggleLike",value:function(){this._cardLike.classList.toggle(this._activeLikeClass)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=n}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners(this._form)}},{key:"disableSubmitButton",value:function(){var e=this._form.querySelector(this._config.submitButtonSelector);e.classList.add(this._config.inactiveButtonClass),e.disabled=!0}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._config.inputSelector));t.forEach((function(n){n.addEventListener("input",(function(){e._toggleButtonState(t),e._isValid(n)}))}))}},{key:"_toggleButtonState",value:function(e){var t=this._form.querySelector(this._config.submitButtonSelector);this._hasInvalidInputs(e)?this.disableSubmitButton():(t.classList.remove(this._config.inactiveButtonClass),t.disabled=!1)}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInputs",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.popupFieldError),t.classList.add(this._config.errorClass),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.popupFieldError),t.classList.remove(this._config.errorClass),t.textContent=""}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._popupIsOpenedSelector="popup_is-opened",this._popupCloseSelector=".popup__close"}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose.bind(this)),this._popup.classList.add(this._popupIsOpenedSelector)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose.bind(this)),this._popup.classList.remove(this._popupIsOpenedSelector)}},{key:"setEventListeners",value:function(){this._popup.querySelector(this._popupCloseSelector).addEventListener("click",this.close.bind(this)),this._popup.addEventListener("click",this._closePopupByClickOnOverlay.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closePopupByClickOnOverlay",value:function(e){e.target==e.currentTarget&&this.close()}}])&&a(t.prototype,n),e}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submit=t,n._popupForm=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this._submit=e}},{key:"open",value:function(){l(d(a.prototype),"open",this).call(this),this._popup.addEventListener("submit",this._submit)}},{key:"close",value:function(){l(d(a.prototype),"close",this).call(this),this._popup.removeEventListener("submit",this._submit),this._popupForm.reset()}},{key:"setInputValue",value:function(e){Array.from(this._popup.querySelectorAll(".popup__field")).forEach((function(t){t.value=e[t.name]}))}},{key:"getInputValues",value:function(){var e=Array.from(this._popup.querySelectorAll(".popup__field")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"renderLoading",value:function(e){this._popupForm.querySelector(".popup__save-button").textContent=e?"Сохранение...":"Сохранить"}}])&&c(t.prototype,n),a}(s);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){this._setDataForPhotoPreview(e),y(k(a.prototype),"open",this).call(this)}},{key:"_setDataForPhotoPreview",value:function(e){var t=this._popup.querySelector(".popup__preview-photo"),n=this._popup.querySelector(".popup__preview-subtitle");t.alt=e.name,t.src=e.link,n.textContent=e.name}}])&&v(t.prototype,n),a}(s);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userInfo={},this._userNameElement=document.querySelector(n),this._userDescriptionElement=document.querySelector(r),this._userAvatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInfo}},{key:"setUserName",value:function(e){var t=e.name;this._userInfo.name=t}},{key:"setUserAbout",value:function(e){var t=e.about;this._userInfo.about=t}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._userInfo.avatar=t}},{key:"setUserId",value:function(e){this._userInfo.id=e}},{key:"getUserId",value:function(){return this._userInfo.id}},{key:"renderUserInfo",value:function(e){this._setUserInfo(e),this.renderUserNameAndAbout(),this.renderUserAvatar()}},{key:"renderUserNameAndAbout",value:function(){this._userNameElement.textContent=this._userInfo.name,this._userDescriptionElement.textContent=this._userInfo.about}},{key:"renderUserAvatar",value:function(){this._userAvatarElement.src=this._userInfo.avatar}},{key:"_setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._userInfo.name=t,this._userInfo.about=n,this._userInfo.avatar=r,this._userInfo.id=o}}])&&S(t.prototype,n),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this.headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseUrl+"/cards",{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"editUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._getResponseData(e)}))}},{key:"setLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e.likes.length}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.image;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/".concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e.likes.length}))}},{key:"updateAvatar",value:function(e){var t=this,n=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._getResponseData(e)}))}},{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}}])&&C(t.prototype,n),e}(),I={cardTemplate:document.querySelector("#card-item"),cardList:document.querySelector(".cards"),previewPhotophoto:document.querySelector(".popup__preview-photo"),previewSubtitle:document.querySelector(".popup__preview-subtitle"),cardPhotoSelector:".cards__photo",cardTitleSelector:".cards__title",cardLikeSelector:".cards__like",cardLikesCounterSelector:".cards__likes_count",cardRemoveButtonSelector:".cards__remove-button",activeLikeClass:"cards__like_active"},E={formSelector:".popup__form",inputSelector:".popup__field",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__field-error-text",errorClass:"popup__field-error-text_visible",popupFieldError:"popup__field_error"},O=document.querySelector(".popup_photo-preview"),P=document.querySelector(".popup_add-card"),R=document.querySelector(".popup_edit-profile"),U=document.querySelector(".popup_update-avatar"),q=document.querySelector(".profile__add-button"),j=document.querySelector(".profile__edit-button"),T=document.querySelector(".popup-confirm"),A=document.querySelector(".profile__edit-avatar-button"),D=new w({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"30d70770-772a-4d02-94ec-a55a1bdcb3a5","Content-Type":"application/json"}}),B=new L({nameSelector:".profile__name",aboutSelector:".profile__description",avatarSelector:".profile__avatar"});D.getUserInfo().then((function(e){B.renderUserInfo(e)})),A.addEventListener("click",(function(){J.disableSubmitButton(),H.open()})),j.addEventListener("click",(function(){M.open(),M.setInputValue(B.getUserInfo())})),q.addEventListener("click",(function(){z.disableSubmitButton(),G.open()}));var N=new g(O);N.setEventListeners();var x=new p(T,(function(){}));function V(e){var n=new t(e,I,{handleCardClick:function(){N.open(e)},handleRemoveClick:function(){x.setSubmitHandler((function(t){t.preventDefault(),x.renderLoading(!0),D.deleteCard(e._id).then((function(){n.removeCard(),x.close(),x.renderLoading(!1)})).catch((function(e){console.log(e)}))})),x.open()},handleSetLike:function(){D.setLike(e._id).then((function(e){n.setLikesNumber(e)})).catch((function(e){console.log(e)}))},handleRemoveLike:function(){D.removeLike(e._id).then((function(e){n.setLikesNumber(e)})).catch((function(e){console.log(e)}))}});return n}x.setEventListeners();var F=new i({renderer:function(e){var t=V(e);F.addItem(t.renderCard(B.getUserId()))}},I.cardList);D.getInitialCards().then((function(e){F.renderItems(e)})).catch((function(e){console.log(e)}));var H=new p(U,(function(e){e.preventDefault(),H.renderLoading(!0);var t=H.getInputValues();D.updateAvatar(t).then((function(){B.setUserAvatar(t),B.renderUserAvatar(),H.close()})).catch((function(e){console.log(e)})).finally((function(){H.renderLoading(!1)}))})),J=new r(E,U.querySelector(E.formSelector));J.enableValidation();var G=new p(P,(function(e){e.preventDefault(),G.renderLoading(!0);var t=G.getInputValues();D.addCard(t).then((function(e){var t=V(e);F.addItem(t.renderCard(e.owner._id)),G.close()})).catch((function(e){console.log(e)})).finally((function(){G.renderLoading(!1)}))})),z=new r(E,P.querySelector(E.formSelector));z.enableValidation();var M=new p(R,(function(e){e.preventDefault(),M.renderLoading(!0);var t=M.getInputValues();D.editUserInfo(t).then((function(){B.setUserName(t),B.setUserAbout(t),B.renderUserNameAndAbout()})).catch((function(e){console.log(e)})).finally((function(){M.renderLoading(!1),M.close()}))}));new r(E,R.querySelector(E.formSelector)).enableValidation(),G.setEventListeners(),M.setEventListeners(),H.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,